@model prjEShopping.Models.Orders

@{
    ViewBag.Title = "Orders";
    Layout = "~/Views/Shared/_Layout_MyCart.cshtml";
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
<style>
    /*JQueryDialogCSS*/
    .ui-dialog.buyDialog .ui-widget-header {
        background: #00b33c;
        color: white;
        border: 0;
    }
    /*JQueryDialogCSS*/
    .CancelConfirm {
        background-color: white !important;
        color: black !important;
    }
</style>
<div style="margin-top:50px">
    @*上ProgressBar//////////////////////////////////////////////////////////////*@
    <div>
        <ul class="progressbar" style="font-size:2rem">
            <li>カート確認</li>
            <li class="active">注文内容確認</li>
            <li>注文完了</li>
        </ul>
    </div>
    <br /><br /><br /><br />
    @*JQueryDialog*@
    <div id="buyDialog" title="通知" style="display:none">
        <div>
            <h3 class="text-center">注文確定後はキャンセルできませんのでご注意下さい</h3>
        </div>
    </div>
    @*//////////////////////////////////////////////////////////////*@
    <h1 class="text-center">注文内容を確認します</h1>
    <hr />
    @*localstorageCartList*@
    <div class="row">
        <div class="form-horizontal">
            <table class="table table-hover" id="myCart" style="font-size:1.5rem;vertical-align:middle;border:1px outset">
                <thead>
                    <tr style="background-color:lightpink;text-align:center">
                        <th>商品</th>
                        <th>価格</th>
                        <th>数量</th>
                        <th>小計</th>
                    </tr>
                </thead>
                <tbody style="background-color:white"></tbody>
                <tfoot>
                    <tr>
                        <th colspan="6">
                            <h2 class="text-right" id="total" name="TotalPrice"></h2>
                        </th>
                    </tr>
                </tfoot>
            </table>
        </div>
        <div style="border:1px solid"></div>
        <h1 class="text-center">お届け先を登録してください</h1>
        <br />
        <div class="form-horizontal col-md-offset-4 col-xs-offset-3">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustomerEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustomerAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustomerPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerPhone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    @*ErrorMsg*@
    <h4 class="text-danger text-right" style="display:none" id="required">
        <strong>正しく入力してください！</strong>
    </h4>
    <div style="margin-top:5%">
        <div>
            <div class="col-md-4 col-sm-4 col-xs-5">
                <a href="@Url.Action("MyCart","Home")" class="bth btn-lg btn-default" style="border:1px solid">
                    <span class="glyphicon glyphicon-shopping-cart" style="color:orange">
                        <span style="color:black">カートに戻す</span>
                    </span>
                </a>
            </div>
            <div style="float:right" id="buy">
                <a class="btn btn-lg btn-success">
                    <span class="glyphicon glyphicon-ok">
                        <span> 注文を最終確認</span>
                    </span>
                </a>
            </div>
        </div>
    </div>
</div>
<script>
    @*清單(localstorageCartList)////////*@
    var cart = [];
    initCart();
    function initCart() {
        if (localStorage.getItem("cart")) {
            cart = JSON.parse(localStorage.getItem("cart"));

            let cartList = "";
            let total = 0;
            for (i = 0; i < cart.length; i++) {
                cartList = "<tr><td name='ProductName'><img src='" + cart[i]["ProductImg"] + "' width='100'/>"
                    + cart[i]["ProductName"] + "</td>"
                    + "<td style='vertical-align:middle'>" + cart[i]["UnitPrice"] + "</td>"
                    + "<td style='vertical-align:middle' name='Quantity'>" + cart[i]["ProductAmount"] + "</td > "
                    + "<td style='vertical-align:middle'>" + cart[i]["UnitPrice"] * cart[i]["ProductAmount"] + "</td>";
                $("#myCart>tbody").append(cartList);
                total += cart[i]["UnitPrice"] * cart[i]["ProductAmount"];
            }
            $("#total").text("合計：" + total + " 元");
        } else {
            $("#myCart>tbody").html("<h3>カートに商品はありません！</h3>");
            $("#functionBox").hide();
        }
    }
    @*DialogConfirm*@
    $("#buy").click(function () {
        $("#buyDialog").dialog({
            modal: true,
            dialogClass: "buyDialog",
            width:"50%",
            buttons: [
                {
                    text: "はい",
                    title: "はい",
                    click: function (ev) {
                        if ($("#CustomerName").val() != "" && $("#CustomerEmail").val() != "" &&
                            $("#CustomerAddress").val() != "" && $("#CustomerPhone").val() != "") {
                            localStorage.clear();
                            window.location = "@Url.Action("Complete","Home")"
                        }
                        else {
                            $("#required").show();
                            $("#buyDialog").dialog("close");
                        }
                    }
                },
                {
                    text: "いいえ",
                    class: "CancelConfirm",
                    click: function () {
                        $("#buyDialog").dialog("close");
                    }
                }
            ], close: function () {
                $("#buyDialog").dialog("close");
            }
        })
    })
</script>